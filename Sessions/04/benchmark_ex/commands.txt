# Generate the synthetic data 
python simulate_fastq_data/simulate_fastq.py simulate_fastq_data/data/chr1_short.gtf simulate_fastq_data/data/chr1_short.fa data/config_wt_chr1.txt 1000000 data/wt single
python simulate_fastq_data/simulate_fastq.py simulate_fastq_data/data/chr1_short.gtf simulate_fastq_data/data/chr1_short.fa data/config_treat_chr1.txt 1000000 data/treat single
for((i=1; i<=32; i++)); do sbatch --cpus-per-task=${i} --output=slurm-%j_cpu_${i} --wrap="echo cpu=${i}; ml load HISAT2/2.2.1; time hisat2 -p ${i} -x /reference/homo_sapiens/GRCh38/ensembl/release-96/Sequence/Hisat2Index/Homo_sapiens.GRC38 data/treat.fq -S out_${i}.sam; gzip out_${i}.sam"; done

# Take too much time, mostly probably reading data vs. aligning
python simulate_fastq_data/simulate_fastq.py simulate_fastq_data/data/chr1_short.gtf simulate_fastq_data/data/chr1_short.fa data/config_treat_chr1.txt 100000 data/treat_100000 single
for((i=1; i<=32; i++)); do sbatch --cpus-per-task=${i} --output=slurm-%j_cpu_${i} --wrap="echo cpu=${i}; ml load HISAT2/2.2.1; time hisat2 -p ${i} -x /reference/homo_sapiens/GRCh38/ensembl/release-96/Sequence/Hisat2Index/Homo_sapiens.GRC38 data/treat_100000.fq -S out_${i}.sam; gzip out_${i}.sam"; done


for((i=1; i<=32; i++)); do sbatch --cpus-per-task=32 --output=slurm-%j_cpu_${i} --wrap="echo cpu=${i}; ml load HISAT2/2.2.1; set -x; mkdir -p /tmp/ali_tmp; cd /tmp/ali_tmp; cp -pr /reference/homo_sapiens/GRCh38/ensembl/release-96/Sequence/Hisat2Index/Homo_sapiens.GRC38* .; cp -p /gpfs0/home1/gdhpcgroup/aps003/Documents/Presentations/2023CoderUpgrade/Sessions/04/benchmark_ex/data/treat_100000.fq .; time hisat2 -p ${i} -x ./Homo_sapiens.GRC38 treat_100000.fq -S out_${i}.sam; rm out_${i}.sam treat_100000.fq Homo_sapiens.GRC38*"; done

#
mv treat-1* hisat
vi commands.txt
mkdir hisat

for((i=1; i<=32; i++)); do sbatch --time=1-00:00:00 --partition=himem --cpus-per-task=${i} --output=slurm-%j_cpu_${i} --wrap="echo cpu=${i}; ml load STAR/2.7.9a; mkdir cpu_${i}; cd cpu_${i}; time STAR --outSAMtype BAM Unsorted --runThreadN ${i} --outSAMstrandField intronMotif --genomeDir /reference/homo_sapiens/GRCh38/ensembl/release-96/Sequence/STARIndex/2.7.9/ --outFileNamePrefix align_${i} --readFilesIn ../data/treat.fq"; done
# Appears that STAR does NOT suffer from the same mmap(?) issues as hisat


# Create sample data 
for((i=0; i<5; i++)); do python simulate_fastq_data/simulate_fastq.py simulate_fastq_data/data/chr1_short.gtf simulate_fastq_data/data/chr1_short.fa data/config_treat_chr1.txt 2500000 data/sample${i} single; done
